pipeline {
    agent {
        docker {
            label 'bankos'
            image 'build-agent:1.0.2-jdk17'
            registryUrl 'https://docker.finzly.net'
            registryCredentialsId 'nexus-creds'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    parameters {
        choice(name: 'SWITCHING_TO', choices: ['ACTIVE', 'FAILOVER'], description: 'Select the environment')
        choice(name: 'CLIENT_NAME', ['All', 'ach', 'fedwire', 'fednow','rtp', 'sample-client','udr'], description: 'Select the CLIENT_NAME')
        password(name: 'AWS_ACCESS_KEY_ID', defaultValue: '', description: 'AWS_ACCESS_KEY_ID')
        password(name: 'AWS_SECRET_ACCESS_KEY', defaultValue: '', description: 'AWS_SECRET_ACCESS_KEY')
        password(name: 'AWS_SESSION_TOKEN', defaultValue: '', description: 'AWS_SESSION_TOKEN')

        booleanParam(name: 'DRY_RUN', defaultValue: false, description: 'Run in dry-run mode')
        booleanParam(name: 'PROCESS_CURRENT_ENV', defaultValue: false, description: 'Process current environment')
        booleanParam(name: 'PROCESS_COMMON_CONFIG', defaultValue: false, description: 'Process common configuration')
    }

    stages {
        stage('Install Node.js Packages') {
            steps {
                sh '''
                cd bankos-dr
                npm install
                '''
            }
        }

        stage('Load and Process Configuration') {
            steps {
                script {
                    env.AWS_ACCESS_KEY_ID = params.AWS_ACCESS_KEY_ID
                    env.AWS_SECRET_ACCESS_KEY = params.AWS_SECRET_ACCESS_KEY
                    env.AWS_SESSION_TOKEN = params.AWS_SESSION_TOKEN
                    env.SWITCHING_TO = params.SWITCHING_TO

                    sh '''
                        pwd
                        ls -l
                        '''

                    def clientsToProcess = []
                    if (params.CLIENT_NAME == 'All') {
                        clientsToProcess = ['ach', 'fedwire', 'fednow','rtp', 'sample-client','udr']
                    } else {
                        clientsToProcess = [params.CLIENT_NAME]
                    }

                    if (params.PROCESS_COMMON_CONFIG) {
                        clientsToProcess.add('common')
                    }

                    for (client in clientsToProcess) {
                        def command = "node bankos-dr/services/vpn-endpoint/main.js"
                        env.CLIENT_NAME = client

                        if (params.DRY_RUN) {
                            command += ' -dr'
                        }
                        if (params.PROCESS_CURRENT_ENV) {
                            command += ' -pce'
                        }

                        echo "Running for client: ${client}"
                        sh command
                    }
                }
            }
        }
    }
}